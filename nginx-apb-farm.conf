# APB Farm is our upstream
upstream apb_farm_backend {
  server 127.0.0.1:8080;  # Replace with your APB Farm server address
  keepalive 32;
}

# Main server block (use this for HTTP-only or modify for HTTPS)
server {
    listen 443 ssl;  # Change to 443 ssl http2 for HTTPS
    listen [::]:443 ssl;  # Change to [::]:443 ssl http2 for HTTPS
    http2 on;
    server_name apb-farm.example.com;  # Replace with your actual domain

    # SSL configuration (uncomment and configure for HTTPS)
    # ssl_certificate /path/to/your/certificate.crt;
    # ssl_certificate_key /path/to/your/private.key;
    # ssl_protocols TLSv1.2 TLSv1.3;
    # ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384;
    # ssl_prefer_server_ciphers off;

    # Security headers
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;

    # Client max body size for file uploads (PKGBUILD + sources)
    client_max_body_size 100M;

    # Timeouts for long-running operations
    proxy_connect_timeout 60s;
    proxy_send_timeout 300s;
    proxy_read_timeout 300s;

    # Buffer settings for file uploads
    proxy_buffering off;
    proxy_request_buffering off;

    # Common proxy settings
    location @proxy_to_app {
        proxy_pass http://apb_farm_backend;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;

        # Remove Server header for security
        proxy_hide_header Server;
    }

    # ===== AUTHENTICATION ENDPOINTS =====

    # Login endpoint - POST only
    location = /auth/login {
        limit_except POST {
            deny all;
        }
        try_files $uri @proxy_to_app;
    }

    # Logout endpoints - GET and POST
    location = /auth/logout {
        limit_except GET POST {
            deny all;
        }
        try_files $uri @proxy_to_app;
    }

    # Current user info - GET only
    location = /auth/me {
        limit_except GET {
            deny all;
        }
        try_files $uri @proxy_to_app;
    }

    # User management - GET and POST
    location = /auth/users {
        limit_except GET POST {
            deny all;
        }
        try_files $uri @proxy_to_app;
    }

    # Individual user operations - DELETE
    location ~ ^/auth/users/([0-9]+)$ {
        limit_except DELETE {
            deny all;
        }
        try_files $uri @proxy_to_app;
    }

    # User role management - PUT only
    location ~ ^/auth/users/([0-9]+)/role$ {
        limit_except PUT {
            deny all;
        }
        try_files $uri @proxy_to_app;
    }

    # Revoke user tokens - POST only
    location ~ ^/auth/users/([0-9]+)/revoke-tokens$ {
        limit_except POST {
            deny all;
        }
        try_files $uri @proxy_to_app;
    }

    # Get user builds - GET only
    location ~ ^/auth/users/([0-9]+)/builds$ {
        limit_except GET {
            deny all;
        }
        try_files $uri @proxy_to_app;
    }

    # Change password - PUT only
    location = /auth/change-password {
        limit_except PUT {
            deny all;
        }
        try_files $uri @proxy_to_app;
    }

    # Update user email (admin) - PUT only
    location ~ ^/auth/users/([0-9]+)/email$ {
        limit_except PUT {
            deny all;
        }
        try_files $uri @proxy_to_app;
    }

    # Update own email - PUT only
    location = /auth/my/email {
        limit_except PUT {
            deny all;
        }
        try_files $uri @proxy_to_app;
    }

    # ===== ADMIN SMTP ENDPOINTS =====

    # SMTP configuration - GET, POST, DELETE
    location = /admin/smtp {
        limit_except GET POST DELETE {
            deny all;
        }
        try_files $uri @proxy_to_app;
    }

    # SMTP test - POST only
    location = /admin/smtp/test {
        limit_except POST {
            deny all;
        }
        try_files $uri @proxy_to_app;
    }

    # ===== FARM STATUS ENDPOINTS =====

    # Farm information - GET only
    location = /farm {
        limit_except GET {
            deny all;
        }
        try_files $uri @proxy_to_app;
    }

    # Health check - GET only
    location = /health {
        limit_except GET {
            deny all;
        }
        try_files $uri @proxy_to_app;
    }

    # Dashboard - GET only
    location = /dashboard {
        limit_except GET {
            deny all;
        }
        try_files $uri @proxy_to_app;
    }

    # Admin panel - GET only
    location = /admin {
        limit_except GET {
            deny all;
        }
        try_files $uri @proxy_to_app;
    }

    # ===== BUILD ENDPOINTS =====

    # Submit build - POST only
    location = /build {
        limit_except POST {
            deny all;
        }
        # Special handling for file uploads
        client_body_timeout 300s;
        try_files $uri @proxy_to_app;
    }

    # Cancel build - POST only
    location ~ ^/build/([a-f0-9-]+)/cancel$ {
        limit_except POST {
            deny all;
        }
        try_files $uri @proxy_to_app;
    }

    # Build status (HTML) - GET only
    location ~ ^/build/([a-f0-9-]+)/status$ {
        limit_except GET {
            deny all;
        }
        try_files $uri @proxy_to_app;
    }

    # Build status (JSON API) - GET only
    location ~ ^/build/([a-f0-9-]+)/status-api$ {
        limit_except GET {
            deny all;
        }
        try_files $uri @proxy_to_app;
    }

    # Build output/logs - GET only
    location ~ ^/build/([a-f0-9-]+)/output$ {
        limit_except GET {
            deny all;
        }
        try_files $uri @proxy_to_app;
    }

    # Build stream (Server-Sent Events) - GET only
    location ~ ^/build/([a-f0-9-]+)/stream$ {
        limit_except GET {
            deny all;
        }
        # Special configuration for SSE
        proxy_buffering off;
        proxy_cache off;
        proxy_set_header Cache-Control no-cache;
        proxy_set_header Connection '';
        proxy_http_version 1.1;
        chunked_transfer_encoding off;
        try_files $uri @proxy_to_app;
    }

    # Build file downloads - GET only
    location ~ ^/build/([a-f0-9-]+)/download/(.+)$ {
        limit_except GET {
            deny all;
        }
        # Special handling for large file downloads
        proxy_buffering off;
        proxy_max_temp_file_size 0;
        try_files $uri @proxy_to_app;
    }

    # Latest builds - GET only
    location = /builds/latest {
        limit_except GET {
            deny all;
        }
        try_files $uri @proxy_to_app;
    }

    # User's own builds - GET only
    location = /my/builds {
        limit_except GET {
            deny all;
        }
        try_files $uri @proxy_to_app;
    }

    # ===== SECURITY AND ERROR HANDLING =====

    # Block access to sensitive files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
        return 404;
    }

    # Block access to backup files
    location ~ ~$ {
        deny all;
        access_log off;
        log_not_found off;
        return 404;
    }

    # Block access to common attack patterns
    location ~* \.(aspx|php|jsp|cgi)$ {
        deny all;
        access_log off;
        log_not_found off;
        return 404;
    }

    # Deny methods not explicitly allowed
    if ($request_method !~ ^(GET|POST|PUT|DELETE|HEAD|OPTIONS)$) {
        return 405;
    }

    # Handle CORS preflight requests
    location ~ ^/(?:auth|admin|farm|health|dashboard|build|builds|my)/ {
        if ($request_method = 'OPTIONS') {
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Allow-Methods' 'GET, POST, PUT, DELETE, OPTIONS' always;
            add_header 'Access-Control-Allow-Headers' 'Authorization, Content-Type, Accept' always;
            add_header 'Access-Control-Max-Age' 1728000 always;
            add_header 'Content-Type' 'text/plain charset=UTF-8' always;
            add_header 'Content-Length' 0 always;
            return 204;
        }
        try_files $uri @proxy_to_app;
    }

    # Root path - redirect to dashboard
    location = / {
        limit_except GET {
            deny all;
        }
        return 301 /dashboard;
    }

    # Catch-all for any unmatched paths
    location / {
        return 302 https://$host/dashboard;
    }

    # Logging
    access_log /var/log/nginx/apb-farm.access.log combined;
    error_log /var/log/nginx/apb-farm.error.log warn;
}

# Rate limiting configuration (add to http block in main nginx.conf)
# limit_req_zone $binary_remote_addr zone=auth_limit:10m rate=5r/m;
# limit_req_zone $binary_remote_addr zone=api_limit:10m rate=30r/m;
# limit_req_zone $binary_remote_addr zone=upload_limit:10m rate=10r/m;

# Apply rate limiting to specific endpoints:
# In auth endpoints: limit_req zone=auth_limit burst=3 nodelay;
# In API endpoints: limit_req zone=api_limit burst=10 nodelay;
# In build uploads: limit_req zone=upload_limit burst=5 nodelay;
